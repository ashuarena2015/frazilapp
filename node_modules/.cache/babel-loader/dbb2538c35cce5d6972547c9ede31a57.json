{"ast":null,"code":"import _defineProperty from \"/Applications/MAMP/htdocs/frazil-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport ActionTypes from '../constants/ActionTypes';\nconst initialState = {\n  fetching: false\n};\n\nconst loginInfo = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionTypes.LOGIN_REQUEST:\n      return _objectSpread({}, state, {\n        fetching: true\n      });\n\n    case ActionTypes.LOGIN_SUCCESS:\n      const _action$response$ = action.response[0],\n            email = _action$response$.email,\n            user_id = _action$response$.user_id;\n      return _objectSpread({}, state, {\n        fetching: false,\n        loginEmail: email,\n        loginId: user_id,\n        loginFailed: false\n      });\n\n    case ActionTypes.LOGIN_FAILED:\n      return _objectSpread({}, state, {\n        fetching: false,\n        loginFailed: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default loginInfo;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/frazil-app/src/reducers/login.js"],"names":["ActionTypes","initialState","fetching","loginInfo","state","action","type","LOGIN_REQUEST","LOGIN_SUCCESS","response","email","user_id","loginEmail","loginId","loginFailed","LOGIN_FAILED"],"mappings":";;;;;;AAAA,OAAOA,WAAP,MAAwB,0BAAxB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AADS,CAArB;;AAIA,MAAMC,SAAS,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACG,SAAKN,WAAW,CAACO,aAAjB;AACE,+BACKH,KADL;AAEEF,QAAAA,QAAQ,EAAE;AAFZ;;AAIF,SAAKF,WAAW,CAACQ,aAAjB;AAAA,gCAC6BH,MAAM,CAACI,QAAP,CAAgB,CAAhB,CAD7B;AAAA,YACUC,KADV,qBACUA,KADV;AAAA,YACiBC,OADjB,qBACiBA,OADjB;AAEE,+BACKP,KADL;AAEEF,QAAAA,QAAQ,EAAE,KAFZ;AAGEU,QAAAA,UAAU,EAAEF,KAHd;AAIEG,QAAAA,OAAO,EAAEF,OAJX;AAKEG,QAAAA,WAAW,EAAE;AALf;;AAOF,SAAKd,WAAW,CAACe,YAAjB;AACE,+BACKX,KADL;AAEEF,QAAAA,QAAQ,EAAE,KAFZ;AAGEY,QAAAA,WAAW,EAAE;AAHf;;AAKF;AACE,aAAOV,KAAP;AAtBL;AAwBA,CAzBD;;AA2BA,eAAeD,SAAf","sourcesContent":["import ActionTypes from '../constants/ActionTypes';\n\nconst initialState = {\n  fetching: false\n}\n\nconst loginInfo = (state = initialState, action) => {\n\tswitch (action.type) {\n    case ActionTypes.LOGIN_REQUEST:\n      return {\n        ...state,\n        fetching: true\n      };\n    case ActionTypes.LOGIN_SUCCESS:\n      const { email, user_id } = action.response[0]\n      return {\n        ...state,\n        fetching: false,\n        loginEmail: email,\n        loginId: user_id,\n        loginFailed: false\n      };\n    case ActionTypes.LOGIN_FAILED:\n      return {\n        ...state,\n        fetching: false,\n        loginFailed: true\n      };\n    default:\n      return state;\n  }\n}\n\nexport default loginInfo;"]},"metadata":{},"sourceType":"module"}